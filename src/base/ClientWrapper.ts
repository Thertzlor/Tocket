import type {Serializable, SocketLike, SocketRequest} from '..';

export class ClientWrapper{
  constructor(
    /**UUID generated by the Server.
     *@category General Properties*/readonly identifier:string,
    /**The WebSocket used to communicate with the the client
     * @category Internal Data*/ readonly socket:SocketLike,
    /**Object for holding custom data about the client.
     * @category General Properties*/public customData:Record<string, Serializable> = {}
  ) {}

  /** true if actively connected, false if the connection is broken.
   * @category General Properties */
  public alive:boolean = true;
  /**Sends a SocketRequest to the client socket.
   * @param msg - The SocketRequest to send. Will be stringified on the way out.
   * @category Primary Controls*/
  public send(msg:SocketRequest):void {this.socket.send(JSON.stringify(msg));}
}